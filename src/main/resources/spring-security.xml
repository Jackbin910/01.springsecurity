<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-4.2.xsd">

    <bean id="passwordEncoder"
            class="org.springframework.security.crypto.password.NoOpPasswordEncoder" factory-method="getInstance"/>

    <!-- spring 过滤器链的配置:
        1) 拦截哪些资源
        2）什么资源什么权限
        3）定义认证方式：HTTPBasic,formLogin
        4) 定义登录页面，定义登录请求地址，定义错误处理方式-->
    <security:http>
        <!--pattern: 需要拦截的资源
            access: 拦截方式-->
        <security:intercept-url pattern="/product/index" access="permitAll()" />
        <security:intercept-url pattern="/userLogin" access="permitAll()" />
        <security:intercept-url pattern="/product/add" access="hasRole('ROLE_USER')" />
        <security:intercept-url pattern="/product/update" access="hasRole('ROLE_USER')" />
        <security:intercept-url pattern="/product/list" access="hasRole('ROLE_ADMIN')" />
        <security:intercept-url pattern="/product/delete" access="hasRole('ROLE_ADMIN')" />
        <security:intercept-url pattern="/**" access="isFullyAuthenticated()" />
        <!-- http basic认证 -->
<!--        <security:http-basic  />-->
        <security:form-login login-page="/userLogin" login-processing-url="/securityLogin" default-target-url="/product/index" authentication-success-handler-ref="myAuthenticationSuccessHandler" authentication-failure-handler-ref="myAuthenticationFailureHandler"></security:form-login>

        <!-- 自定义权限不足处理 -->
        <security:access-denied-handler error-page="/error" />

        <!-- 关闭 spring security csrf机制 -->
        <security:csrf disabled="true"></security:csrf>
    </security:http>

    <!-- 认证管理器
        1） 认证信息（账户名，密码，当前用户权限）-->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="myUserDetailService">
           <!-- <security:user-service>
                <security:user name="yangbin1" authorities="ROLE_USER" password="jackbin91"></security:user>
                <security:user name="yangbin2" authorities="ROLE_ADMIN" password="jackbin91"></security:user>
            </security:user-service>-->
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="myUserDetailService" class="com.yangbin1.security.MyUserDetailService"></bean>

    <bean id="myAuthenticationSuccessHandler" class="com.yangbin1.security.MyAuthenticationSuccessHandler"></bean>

    <bean id="myAuthenticationFailureHandler" class="com.yangbin1.security.MyAuthenticationFailureHandler"></bean>
</beans>